/**!
 * sail.js 1.0.2
 * Sailing Through Scripts: Smooth Library Loading Ahead.
 * https://github.com/SebastianSava/sail.js.git
 *
 * (c) Sava Sebastian-Florin (https://sava-sebastian.dev)
 * Released under the MIT License
 *
 * Date: 2024-05-14T06:48:09.352Z
 */
!function(e,n){"function"==typeof define&&define.amd?define([],n(e)):"object"==typeof module&&module.exports?module.exports=n(e):e.sail=n(e)}("undefined"!=typeof global?global:this.window||this.global,function(e){"use strict";const l={},f=[],p=[],u=e,c=!!document.querySelector&&!!u.addEventListener;let a=0;function d(e=""){return(e=e.split("?")[0].split("."))[e.length-1].toLowerCase()}return l.ready=function(){if(c){var n=arguments,t=n[n.length-2];const o=n[n.length-1];let e=0;"function"==typeof o&&("string"==typeof t&&u.addEventListener("lib:"+t,o,!1),"string"!=typeof t)&&u.addEventListener("lib:all",function(){e++,a===e&&o.apply(l,[f])},!1)}},l.init=function({name:n,files:e,onComplete:t}){if(c&&e.length){e=[...new Set(e)],a++;const i=[];var o=[];for(const s of e){const r=function(e){let n={};if("object"==typeof e)for(const i in e)e[i]&&(n={name:i,extension:d(e[i]),url:e[i]});else n={name:(t=(t=(t=e).split("/"))[t.length-1],-1!==(o=t.indexOf("?"))?t.substring(0,o):t),extension:d(e),url:e};var t,o;return n}(s);f.some(e=>e.name===r.name&&e.extension===r.extension)||(r.promise=function(o,i){return new Promise((e,n)=>{let t;if("js"===i)(t=document.createElement("script")).async=!1,t.defer=!0,t.src=o,t.type="text/javascript";else{if("css"!==i)return void n(new Error("Unsupported file type"));(t=document.createElement("link")).href=o,t.rel="stylesheet"}t.onload=e,t.onerror=n,document.head.appendChild(t)})}(r.url,r.extension),f.push(r),p.push(r.promise),i.push(r),o.push(r.promise))}Promise.all(o).then(function(e){e.length&&("function"==typeof t&&t.apply(l,[i]),"string"==typeof n&&u.dispatchEvent(new Event("lib:"+n)),u.dispatchEvent(new Event("lib:all")))})}},l});